{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/popup.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","langList","Afrikaans","Albanian","Amharic","Arabic","Armenian","Azerbaijani","Basque","Belarusian","Bengali","Bosnian","Bulgarian","Catalan","Cebuano","Chichewa","Corsican","Croatian","Czech","Danish","Dutch","English","Esperanto","Estonian","Filipino","Finnish","French","Frisian","Galician","Georgian","German","Greek","Gujarati","Hausa","Hawaiian","Hebrew","Hindi","Hmong","Hungarian","Icelandic","Igbo","Indonesian","Irish","Italian","Japanese","Javanese","Kannada","Kazakh","Khmer","Korean","Kyrgyz","Lao","Latin","Latvian","Lithuanian","Luxembourgish","Macedonian","Malagasy","Malay","Malayalam","Maltese","Maori","Marathi","Mongolian","Nepali","Norwegian","Pashto","Persian","Polish","Portuguese","Punjabi","Romanian","Russian","Samoan","Serbian","Sesotho","Shona","Sindhi","Sinhala","Slovak","Slovenian","Somali","Spanish","Sundanese","Swahili","Swedish","Tajik","Tamil","Telugu","Thai","Turkish","Ukrainian","Urdu","Uyghur","Uzbek","Vietnamese","Welsh","Xhosa","Yiddish","Yoruba","Zulu","langListWithAuto","JSON","parse","stringify","currentSetting","toggleList","keyList","settingList","changeSetting","settingListKey","document","getElementById","chrome","runtime","sendMessage","type","options","response","addEventListener","settingHtml","optionListKey","container","innerHTML","setting","loadSettingHtml"],"mappings":"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","file":"popup.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","'use strict';\r\n\r\n//interact user setting, //save and load setting from background.js\r\n\r\nvar langList = {\r\n  Afrikaans: \"af\",\r\n  Albanian: \"sq\",\r\n  Amharic: \"am\",\r\n  Arabic: \"ar\",\r\n  Armenian: \"hy\",\r\n  Azerbaijani: \"az\",\r\n  Basque: \"eu\",\r\n  Belarusian: \"be\",\r\n  Bengali: \"bn\",\r\n  Bosnian: \"bs\",\r\n  Bulgarian: \"bg\",\r\n  Catalan: \"ca\",\r\n  Cebuano: \"ceb\",\r\n  Chichewa: \"ny\",\r\n  \"Chinese Simplified\": \"zh-cn\",\r\n  \"Chinese Traditional\": \"zh-tw\",\r\n  Corsican: \"co\",\r\n  Croatian: \"hr\",\r\n  Czech: \"cs\",\r\n  Danish: \"da\",\r\n  Dutch: \"nl\",\r\n  English: \"en\",\r\n  Esperanto: \"eo\",\r\n  Estonian: \"et\",\r\n  Filipino: \"tl\",\r\n  Finnish: \"fi\",\r\n  French: \"fr\",\r\n  Frisian: \"fy\",\r\n  Galician: \"gl\",\r\n  Georgian: \"ka\",\r\n  German: \"de\",\r\n  Greek: \"el\",\r\n  Gujarati: \"gu\",\r\n  \"Haitian Creole\": \"ht\",\r\n  Hausa: \"ha\",\r\n  Hawaiian: \"haw\",\r\n  Hebrew: \"iw\",\r\n  Hindi: \"hi\",\r\n  Hmong: \"hmn\",\r\n  Hungarian: \"hu\",\r\n  Icelandic: \"is\",\r\n  Igbo: \"ig\",\r\n  Indonesian: \"id\",\r\n  Irish: \"ga\",\r\n  Italian: \"it\",\r\n  Japanese: \"ja\",\r\n  Javanese: \"jw\",\r\n  Kannada: \"kn\",\r\n  Kazakh: \"kk\",\r\n  Khmer: \"km\",\r\n  Korean: \"ko\",\r\n  \"Kurdish (Kurmanji)\": \"ku\",\r\n  Kyrgyz: \"ky\",\r\n  Lao: \"lo\",\r\n  Latin: \"la\",\r\n  Latvian: \"lv\",\r\n  Lithuanian: \"lt\",\r\n  Luxembourgish: \"lb\",\r\n  Macedonian: \"mk\",\r\n  Malagasy: \"mg\",\r\n  Malay: \"ms\",\r\n  Malayalam: \"ml\",\r\n  Maltese: \"mt\",\r\n  Maori: \"mi\",\r\n  Marathi: \"mr\",\r\n  Mongolian: \"mn\",\r\n  \"Myanmar (Burmese)\": \"my\",\r\n  Nepali: \"ne\",\r\n  Norwegian: \"no\",\r\n  Pashto: \"ps\",\r\n  Persian: \"fa\",\r\n  Polish: \"pl\",\r\n  Portuguese: \"pt\",\r\n  Punjabi: \"pa\",\r\n  Romanian: \"ro\",\r\n  Russian: \"ru\",\r\n  Samoan: \"sm\",\r\n  \"Scots Gaelic\": \"gd\",\r\n  Serbian: \"sr\",\r\n  Sesotho: \"st\",\r\n  Shona: \"sn\",\r\n  Sindhi: \"sd\",\r\n  Sinhala: \"si\",\r\n  Slovak: \"sk\",\r\n  Slovenian: \"sl\",\r\n  Somali: \"so\",\r\n  Spanish: \"es\",\r\n  Sundanese: \"su\",\r\n  Swahili: \"sw\",\r\n  Swedish: \"sv\",\r\n  Tajik: \"tg\",\r\n  Tamil: \"ta\",\r\n  Telugu: \"te\",\r\n  Thai: \"th\",\r\n  Turkish: \"tr\",\r\n  Ukrainian: \"uk\",\r\n  Urdu: \"ur\",\r\n  Uyghur: \"ug\",\r\n  Uzbek: \"uz\",\r\n  Vietnamese: \"vi\",\r\n  Welsh: \"cy\",\r\n  Xhosa: \"xh\",\r\n  Yiddish: \"yi\",\r\n  Yoruba: \"yo\",\r\n  Zulu: \"zu\"\r\n};\r\nvar langListWithAuto = JSON.parse(JSON.stringify(langList)); //copy lang and add auto\r\nlangListWithAuto['Auto'] = \"auto\";\r\nvar toggleList = {\r\n  \"On\": true,\r\n  \"Off\": false\r\n};\r\nvar keyList = {\r\n  \"None\": null,\r\n  \"Ctrl\": 17,\r\n  \"Alt\": 18,\r\n  \"Shift\": 16\r\n};\r\n\r\nvar ocrLangList = {\r\n  'Afrikaans': 'afr',\r\n  'Albanian': 'sqi',\r\n  'Amharic': 'amh',\r\n  'Arabic': 'ara',\r\n  'Armenian': 'hye',\r\n  'Azerbaijani': 'aze',\r\n  'Basque': 'eus',\r\n  'Belarusian': 'bel',\r\n  'Bengali': 'ben',\r\n  'Bosnian': 'bos',\r\n  'Bulgarian': 'bul',\r\n  'Burmese': 'mya',\r\n  'Catalan': 'cat',\r\n  'Cebuano': 'ceb',\r\n  'Chinese Simplified': 'chi_sim',\r\n  'Chinese Simplified (vertical)': 'chi_sim_vert',\r\n  'Chinese Traditional': 'chi_tra',\r\n  'Chinese Traditional (vertical)': 'chi_tra_vert',\r\n  'Corsican': 'cos',\r\n  'Croatian': 'hrv',\r\n  'Czech': 'ces',\r\n  'Danish': 'dan',\r\n  'Dutch': 'nld',\r\n  'English': 'eng',\r\n  'Esperanto': 'epo',\r\n  'Estonian': 'est',\r\n  'Filipino': 'fil',\r\n  'Finnish': 'fin',\r\n  'French': 'fra',\r\n  'Frisian': 'fry',\r\n  'Galician': 'glg',\r\n  'Georgian': 'kat',\r\n  'German': 'deu',\r\n  'Greek': 'ell',\r\n  'Gujarati': 'guj',\r\n  'Haitian': 'hat',\r\n  'Hebrew': 'heb',\r\n  'Hindi': 'hin',\r\n  'Hungarian': 'hun',\r\n  'Icelandic': 'isl',\r\n  'Indonesian': 'ind',\r\n  'Irish': 'gle',\r\n  'Italian': 'ita',\r\n  'Japanese': 'jpn',\r\n  'Japanese (vertical)': 'jpn_vert',\r\n  'Javanese': 'jav',\r\n  'Kannada': 'kan',\r\n  'Kazakh': 'kaz',\r\n  'Khmer': 'khm',\r\n  'Korean': 'kor',\r\n  'Korean (vertical)': 'kor_vert',\r\n  'Kurdish': 'kmr',\r\n  'Lao': 'lao',\r\n  'Latin': 'lat',\r\n  'Latvian': 'lav',\r\n  'Lithuanian': 'lit',\r\n  'Luxembourgish': 'ltz',\r\n  'Macedonian': 'mkd',\r\n  'Malay': 'msa',\r\n  'Malayalam': 'mal',\r\n  'Maltese': 'mlt',\r\n  'Maori': 'mri',\r\n  'Marathi': 'mar',\r\n  'Mongolian': 'mon',\r\n  'Nepali': 'nep',\r\n  'Norwegian': 'nor',\r\n  'Persian': 'fas',\r\n  'Polish': 'pol',\r\n  'Portuguese': 'por',\r\n  'Romanian': 'ron',\r\n  'Russian': 'rus',\r\n  'Scottish Gaelic': 'gla',\r\n  'Serbian': 'srp',\r\n  'Sindhi': 'snd',\r\n  'Sinhala': 'sin',\r\n  'Slovak': 'slk',\r\n  'Slovenian': 'slv',\r\n  'Spanish': 'spa',\r\n  'Sundanese': 'sun',\r\n  'Swahili': 'swa',\r\n  'Swedish': 'swe',\r\n  'Tajik': 'tgk',\r\n  'Tamil': 'tam',\r\n  'Telugu': 'tel',\r\n  'Thai': 'tha',\r\n  'Turkish': 'tur',\r\n  'Ukrainian': 'ukr',\r\n  'Urdu': 'urd',\r\n  'Uzbek': 'uzb',\r\n  'Vietnamese': 'vie',\r\n  'Welsh': 'cym',\r\n  'Yiddish': 'yid',\r\n  'Yoruba': 'yor'\r\n};\r\n\r\n\r\nvar settingList = {\r\n  \"useTooltip\": {\r\n    \"description\": \"Enable tooltip\",\r\n    \"optionList\": toggleList\r\n  },\r\n  \"useTTS\": {\r\n    \"description\": \"Enable TTS\",\r\n    \"optionList\": toggleList\r\n  },\r\n  \"translateSource\": {\r\n    \"description\": \"Translate from\",\r\n    \"optionList\": langListWithAuto\r\n  },\r\n  \"translateTarget\": {\r\n    \"description\": \"Translate to\",\r\n    \"optionList\": langList\r\n  },\r\n  \"keyDownTooltip\": {\r\n    \"description\": \"Tooltip activation hold key\",\r\n    \"optionList\": keyList\r\n  },\r\n  \"keyDownTTS\": {\r\n    \"description\": \"TTS activation hold key\",\r\n    \"optionList\": keyList\r\n  },\r\n  \"useOCR\": {\r\n    \"description\": \"Enable OCR (Experimental)\",\r\n    \"optionList\": toggleList\r\n  },\r\n  \"ocrDetectionLang\": {\r\n    \"description\": \"OCR Detection Language\",\r\n    \"optionList\": ocrLangList\r\n  }\r\n}\r\nvar currentSetting;\r\n\r\n//load setting from chrome storage\r\n//then, load setting html\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  chrome.runtime.sendMessage({\r\n      type: 'loadSetting'\r\n    },\r\n    response => {\r\n      currentSetting = response;\r\n      loadSettingHtml();\r\n    }\r\n  );\r\n});\r\n\r\nfunction loadSettingHtml() {\r\n  //create optionlist\r\n  var settingHtml = \"\"\r\n  for (var settingListKey in settingList) {\r\n    settingHtml += '<li class=\"list-group-item list-group-item-action\">' + settingList[settingListKey][\"description\"] + '<select id=\"' + settingListKey + '\">';\r\n    for (var optionListKey in settingList[settingListKey][\"optionList\"]) {\r\n      settingHtml += '<option value=\"' + settingList[settingListKey][\"optionList\"][optionListKey] + '\">' + optionListKey + '</option>'\r\n    }\r\n    settingHtml += '</select></li>'\r\n  }\r\n  var container = document.getElementById('container');\r\n  container.innerHTML = container.innerHTML + settingHtml;\r\n\r\n  //set selected value and change listner\r\n  for (var settingListKey in settingList) {\r\n    var setting = document.getElementById(settingListKey);\r\n    setting.value = currentSetting[settingListKey]; //set current selected item\r\n    setting.addEventListener(\"change\", changeSetting); //set value change listner\r\n  }\r\n}\r\n\r\nfunction changeSetting() {\r\n  for (var settingListKey in settingList) { //get all selected list\r\n    currentSetting[settingListKey] = document.getElementById(settingListKey).value;\r\n  }\r\n\r\n  chrome.runtime.sendMessage({ //save setting from background.js\r\n      type: 'saveSetting',\r\n      options: currentSetting\r\n    },\r\n    response => {}\r\n  );\r\n}\r\n"],"sourceRoot":""}